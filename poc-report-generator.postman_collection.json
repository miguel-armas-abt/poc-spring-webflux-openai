{
	"info": {
		"_postman_id": "a971f84f-263e-4a46-872a-ad33429782c8",
		"name": "poc-report-generator",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33527392"
	},
	"item": [
		{
			"name": "generate-report",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "timestamp",
						"value": "{{$isoTimestamp}}",
						"type": "text"
					},
					{
						"key": "traceParent",
						"value": "{{traceParent}}",
						"type": "text"
					},
					{
						"key": "channelId",
						"value": "APP",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"imageUrl\": \"https://raw.githubusercontent.com/miguel-armas-abt/poc-spring-webflux-openai/main/report-generator-v1/src/main/resources/img/form-image.jpeg\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/poc/report-generator/v1/reports",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"poc",
						"report-generator",
						"v1",
						"reports"
					]
				}
			},
			"response": []
		},
		{
			"name": "openai - completions",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{OPENAI_KEY}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"model\": \"gpt-4o-mini\",\r\n    \"messages\": [\r\n        {\r\n            \"role\": \"system\",\r\n            \"content\": \"Eres un asistente útil.\"\r\n        },\r\n        {\r\n            \"role\": \"user\",\r\n            \"content\": \"¡Hola, mundo!\"\r\n        }\r\n    ],\r\n    \"max_tokens\": 40,\r\n    \"temperature\": 0.7\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.openai.com/v1/chat/completions",
					"protocol": "https",
					"host": [
						"api",
						"openai",
						"com"
					],
					"path": [
						"v1",
						"chat",
						"completions"
					]
				},
				"description": "Generated from cURL: curl https://api.openai.com/v1/chat/completions \\\r\n  -H \"Content-Type: application/json\" \\\r\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\r\n  -d '{\r\n    \"model\": \"gpt-4o-mini\",\r\n    \"messages\": [\r\n      {\"role\": \"system\", \"content\": \"Eres un asistente útil.\"},\r\n      {\"role\": \"user\",   \"content\": \"¡Hola, mundo!\"}\r\n    ],\r\n    \"max_tokens\": 150,\r\n    \"temperature\": 0.7\r\n  }'\r\n"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"function setTraceParent() {\r",
					"    const hex = n => [...Array(n)].reduce(s => s + (Math.random()*16|0).toString(16), '');\r",
					"    const traceId = Math.floor(Date.now()/1e3).toString(16).padStart(8,'0') + hex(24);\r",
					"\r",
					"    let spanId;\r",
					"    do { spanId = hex(16); } while (/^0+$/.test(spanId));\r",
					"\r",
					"    //W3C Estandar\r",
					"    const traceParent = `00-${traceId}-${spanId}-01`;\r",
					"    pm.globals.set(\"traceParent\", traceParent);\r",
					"}\r",
					"\r",
					"setTraceParent();\r",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}